PREHOOK: query: explain cbo
select avg(ss_quantity)
       ,avg(ss_ext_sales_price)
       ,avg(ss_ext_wholesale_cost)
       ,sum(ss_ext_wholesale_cost)
 from store_sales
     ,store
     ,customer_demographics
     ,household_demographics
     ,customer_address
     ,date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'M'
  and cd_education_status = '4 yr Degree'
  and ss_sales_price between 100.00 and 150.00
  and hd_dep_count = 3   
     )or
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'D'
  and cd_education_status = 'Primary'
  and ss_sales_price between 50.00 and 100.00   
  and hd_dep_count = 1
     ) or 
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'U'
  and cd_education_status = 'Advanced Degree'
  and ss_sales_price between 150.00 and 200.00 
  and hd_dep_count = 1  
     ))
 and((ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 100 and 200  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 300  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 250  
     ))
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo
select avg(ss_quantity)
       ,avg(ss_ext_sales_price)
       ,avg(ss_ext_wholesale_cost)
       ,sum(ss_ext_wholesale_cost)
 from store_sales
     ,store
     ,customer_demographics
     ,household_demographics
     ,customer_address
     ,date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'M'
  and cd_education_status = '4 yr Degree'
  and ss_sales_price between 100.00 and 150.00
  and hd_dep_count = 3   
     )or
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'D'
  and cd_education_status = 'Primary'
  and ss_sales_price between 50.00 and 100.00   
  and hd_dep_count = 1
     ) or 
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'U'
  and cd_education_status = 'Advanced Degree'
  and ss_sales_price between 150.00 and 200.00 
  and hd_dep_count = 1  
     ))
 and((ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 100 and 200  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 300  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 250  
     ))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveProject($f0=[/(CAST($0):DOUBLE, $1)], $f1=[/($2, $3)], $f2=[/($4, $5)], $f3=[CAST($4):DECIMAL(17, 2)])
  HiveAggregate(group=[{}], agg#0=[sum($14)], agg#1=[count($14)], agg#2=[sum($16)], agg#3=[count($16)], agg#4=[sum($17)], agg#5=[count($17)])
    HiveJoin(condition=[=($0, $13)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(s_store_sk=[$0])
        HiveFilter(condition=[IS NOT NULL($0)])
          HiveTableScan(table=[[default, store]], table:alias=[store])
      HiveJoin(condition=[AND(=($11, $0), OR(AND(OR(=($1, _UTF-16LE'KY'), =($1, _UTF-16LE'GA'), =($1, _UTF-16LE'NM')), BETWEEN(false, $17, 100, 200)), AND(OR(=($1, _UTF-16LE'MT'), =($1, _UTF-16LE'OR'), =($1, _UTF-16LE'IN')), BETWEEN(false, $17, 150, 300)), AND(OR(=($1, _UTF-16LE'WI'), =($1, _UTF-16LE'MO'), =($1, _UTF-16LE'WV')), BETWEEN(false, $17, 50, 250))))], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(ca_address_sk=[$0], ca_state=[$8], ca_country=[CAST(_UTF-16LE'United States'):VARCHAR(2147483647) CHARACTER SET "UTF-16LE" COLLATE "ISO-8859-1$en_US$primary"])
          HiveFilter(condition=[AND(=($10, _UTF-16LE'United States'), IS NOT NULL($0))])
            HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
        HiveJoin(condition=[AND(=($7, $0), OR(AND(=($3, _UTF-16LE'M'), =($4, _UTF-16LE'4 yr Degree'), BETWEEN(false, $11, 100, 150), =($1, 3)), AND(=($3, _UTF-16LE'D'), =($4, _UTF-16LE'Primary'), BETWEEN(false, $11, 50, 100), =($1, 1)), AND(=($3, _UTF-16LE'U'), =($4, _UTF-16LE'Advanced Degree'), BETWEEN(false, $11, 150, 200), =($1, 1))))], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject(hd_demo_sk=[$0], hd_dep_count=[$3])
            HiveFilter(condition=[AND(IN($3, 3, 1), IS NOT NULL($0))])
              HiveTableScan(table=[[default, household_demographics]], table:alias=[household_demographics])
          HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveProject(cd_demo_sk=[$0], cd_marital_status=[$2], cd_education_status=[$3])
              HiveFilter(condition=[AND(IN($2, _UTF-16LE'M', _UTF-16LE'D', _UTF-16LE'U'), IN($3, _UTF-16LE'4 yr Degree', _UTF-16LE'Primary', _UTF-16LE'Advanced Degree'), IS NOT NULL($0))])
                HiveTableScan(table=[[default, customer_demographics]], table:alias=[customer_demographics])
            HiveJoin(condition=[=($0, $10)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(ss_sold_date_sk=[$0], ss_cdemo_sk=[$4], ss_hdemo_sk=[$5], ss_addr_sk=[$6], ss_store_sk=[$7], ss_quantity=[$10], ss_sales_price=[$13], ss_ext_sales_price=[$15], ss_ext_wholesale_cost=[$16], ss_net_profit=[$22])
                HiveFilter(condition=[AND(OR(BETWEEN(false, $13, 100, 150), BETWEEN(false, $13, 50, 100), BETWEEN(false, $13, 150, 200)), IS NOT NULL($7), IS NOT NULL($4), IS NOT NULL($5), IS NOT NULL($6), IS NOT NULL($0))])
                  HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
              HiveProject(d_date_sk=[$0], d_year=[CAST(2001):INTEGER])
                HiveFilter(condition=[AND(=($6, 2001), IS NOT NULL($0))])
                  HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

